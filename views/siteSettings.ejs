<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="/main.css" />
    <title>Site Settings</title>
  </head>
  <body>
    <h1>Site Settings Page</h1>
    <!-- 
    Leaving this here. It works. It is good code reuse. Except that the
    table name must be included.  A malicious user could change the table
    name.

    On the other hand, creating multiple forms on the page means parsing
    the query somewhere. if in the .ejs file, we must traverse and array
    and find the correct object. this is highly coupled code.
    Can we pass object of objects to the template?
    {
      home_page: {
      title: foo
      }
    }

    does node sqlite have options for returning an object? 

    YES! see organizer.js line 97. build an object
         -->

    <% formData.forEach( (data) => { %>
    <p><b><%=data.title %> Settings</b></p>

    <!-- data.name data.title are not to be changed  -->
    <form action="update_site_settings" method="post">
      <p>
        Heading:
        <input id="id_settings_heading" type="text" size="20" name="heading" value="<%=data.heading%>" />
      </p>

      <p>
        Description:<input
          id="id_settings_desc"
          type="text"
          size="20"
          name="description"
          value="<%=data.description%>"
        />
      </p>
      <button type="submit">Update the <%=data.title %></button>
      <input type="hidden" name="name" value="<%=data.name%>" />
    </form>

    <% }); %>
  </body>
</html>
